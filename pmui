#!/usr/bin/env perl
use Mojolicious::Lite;
use lib "$ENV{'HOME'}/dev/Video-PlaybackMachine/lib";
use Video::PlaybackMachine::Schema;
use Video::PlaybackMachine::DirectoryScanner;
use DateTime;
use DateTime::Format::DateParse;

our $Database_Name = "$ENV{'HOME'}/dev/Video-PlaybackMachine/bin/test.db";

app->secret('aeHeer8e');

helper 'timefmt' => sub {
	my $self = shift;
	my ($raw_time) = @_;
	
	my $dt = DateTime->from_epoch( epoch => $raw_time );
	
	$dt->set_time_zone('America/Los_Angeles');
	return $dt->ymd . " " . $dt->hms;
};

get '/' => sub {
  my $self = shift;
  
  my $schedule_name = $self->param('schedulename') // 'Test Schedule';
  
  my $schema = Video::PlaybackMachine::Schema->connect("dbi:SQLite:dbname=$Database_Name", '', '');
  
  my $scanner = Video::PlaybackMachine::DirectoryScanner->new(
  	directories => [ '/media/psf/Home/Movies/playback_machine' ],
  	schedule_name => $schedule_name,
  	schema => $schema
  );
  
  $scanner->scan();

  my $schedule = $schema->resultset('Schedule')->find({ name => $schedule_name });
  
  $self->stash('schedule', $schedule);
  
  my $movie_info_rs = $schema->resultset('MovieInfo');
  
  $self->stash('movies', $movie_info_rs );
  
  $self->render('index');
};

post '/add_movie' => sub {
	my $self = shift;
	
	$self->param('start_time') or die "No start time";
	
	my $start_time_dt = DateTime::Format::DateParse->parse_datetime( $self->param( 'start_time' ), 'America/Los_Angeles' )
		or die "Invalid start time ", $self->param('start_time');
			
  my $mrl = $self->param('movie') or die "No MRL";
	
  my $schedule_name = $self->param('schedulename') // 'Test Schedule';
  
  my $schema = Video::PlaybackMachine::Schema->connect("dbi:SQLite:dbname=$Database_Name", '', '');
  
  my $schedule = $schema->resultset('Schedule')->find({ name => $schedule_name });
  
  $schema->txn_do(sub {
  
	  my $movie_info = $schema->resultset('MovieInfo')->find({mrl => $mrl})
		or die "Couldn't find movie for mrl '$mrl'";
  
	  my $schedule_row = $schema->resultset('ScheduleEntry')->create({ 'start_time' => $start_time_dt->epoch(), mrl => $mrl, schedule_id => $schedule->schedule_id });
	  
	  my $schedule_end_row = $schema->resultset('ScheduleEntryEnd')->create({ 'stop_time' => $start_time_dt->epoch() + $movie_info->duration(), schedule_entry_id => $schedule_row->schedule_entry_id() });
  });
  
  $self->redirect_to('/');
};

app->start;
__DATA__

@@ index.html.ep
% layout 'default';
% title 'PM Scheduler';
<h2><%= $schedule->name() %></h2>

<table>
<tr><th>Start</th><th>Title</th><th>End</th></tr>
% foreach my $entry ( $schedule->schedule_entries_in_order() ) {
<tr>
<td><%= timefmt( $entry->start_time ) %></td>
<td><%= $entry->movie_info->title() %></td>
<td><%= timefmt( $entry->schedule_entry_end->stop_time ) %></td>
</tr>
% }
</table>
%= form_for add_movie => ( method => 'POST' ) => begin
  %= datetime_field 'start_time'
  %= select_field movie => [ map { [ $_->title => $_->mrl ] } $movies->all() ]
  %= submit_button 'add'
%end


@@ layouts/default.html.ep
<!DOCTYPE html>
<html>
  <head><title><%= title %></title></head>
  <body><%= content %></body>
</html>
